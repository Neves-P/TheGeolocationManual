[
["index.html", "Light-level geolocation analyses Preface Acknowledgements License", " Light-level geolocation analyses Last edited on 2018-11-13 Preface Note: The Manual is currently under development and content may not show up (ask Simeon if you need immediate access)! This manual is part of the following publication and has been written by the same group of authors: Simeon Lisovski, Silke Bauer, Martins Briedis, Kiran Danjahl-Adams, Sarah Davidson, Christoph Meier, Lykke Pedersen, Julia, Karagicheva, Benjamin Merkel, Janne Ouwehand, Michael T. Hallworth, Eldar Rakhimberdiev, Michael Sumner, Caz Taylor, Simon Wotherspoon, Eli Bridge (201X) The Nuts and Bolts of Light-Level Geolocation Analyses. Journal X:xxx-xxx. Geolocation by light is a method of animal tracking that uses small, light-detecting data loggers (referred to as geolocators) to determine the locations of animals based on the light environment they move through. Technological and fieldwork issues aside, effective use of light level geolocation requires translation of a time series of light levels into geographical locations. Geographical locations that are derived from light-level data are subject to error which directly arises from noise in the light-level data, i.e. unpredictable shading of the light sensor due to weather or the habitat (Lisovski et al. 2012). Although light-level geolocation has provided a wealth of new insights into the annual movements of hundreds of bird species and other taxa, researchers struggle with the analytical steps that are needed to obtain location estimates, interpret them, present their results, and document what they have done. This manual has been written by some of the leading experts in geolocator analysis and is based on material created for several international training workshops. It offers code and experience that we have accumulated over the last decade, and we hope that this collection of analysis using different open source software tools (R packages) helps both newcomers and experienced users of light-level geolocation. Acknowledgements We want to acknowledge all people that have been involved in the development of geolocator tools as well as all participants of the many international geolocator workshops. Furthermore, we like to acknowledge Steffen Hahn and Felix Liechti organisewho organised a first workshop of the analysis of geolocator data from songbirds back in 2011. This workshop has been financially supported by the Swiss Ornithological Institute and the Swiss National Science Foundation. The National Centre for Ecological Analysis and Synthesis (NCEAS) has supported two meetings with experts in geolocator analysis in 2012 ans 2013 and many of the tools that are discussed in this manual were kick started at these meetings. We want to thank James Fox from Migrate Technology Ltd. as well as the US National Science Foundation for contiouing financial support to develop tools and organise workshops. License This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License. References "],
["structure.html", "Chapter 1 Structure of the manual The datasets Reproducing the analyses", " Chapter 1 Structure of the manual This manual should allow users with limited knowledge in R coding to perform a state-of-the-art analysis of geolocator data. Thus, we start with the very basics of loading packages and data 3 Starting with the initial data editing steps, which we call twilight annotation 4, we provide instructions on how to use several prominent analysis packages, illustrate the general analysis workflow using example data, and provide some recommendations for how to visualize and present results. We do not cover every available analysis package but focus on what we percieve to be the most frequently used tools, which are GeoLight 5, probGLS 6, SGAT 7 and FLightR 8. The manual concludes with a section on data repositories such as Movebank that allows storing and shring geolocator tracks 9. The datasets To illustrate the capabilities of the different packages, discuss the potential pitfalls, and provide some recommendations, we will use raw geolocator data from four individuals of different species. All used tag data and the results as well as the code for the analyses has been uploaded onto Movebank unter study: xxxx. TagID Species Folder Tag type M034 Red-backed Shrike LanCol Integio (Migrate Technology Ltd.) 14SA European bee-eater MerApi PAM (Swiss Ornithological Institute) PasCir01 Purple martin PasCir Custom (by Eli Bridge) 2655 Brünnich’s guillemot UriLom Lotek Although all of these tag types record light values over time, they differ in some key details. First, tags often differ in the frequency at which they write/log data. Many tags collect a reading every minute and store the maximal light value every 5 or 10 minutes. Other may store a maximum every 2 minutes. The tag that yielded the Purple martin data set, averaged 1min readings every 10min instead of taking a maximum. These four tags also differ in their sensitivity and how they record light levels. Some tags are sensitive only at low light levels and quickly “max out” when they experience a lot of light. As such, their light-levels do not have units and are simply an index of light intensity. The Integio tags can record unique light values for all natural light levels on earth, and they store lux values that range from 0 to ~70,000. Depending on the tag type, you may have to perform some preliminary steps such as log-transforming your data or time shifting light values for sunsets (we will provide details while working on the specific datasets). Reproducing the analyses This manual contains code that can be copy pasted into an R script and executed to reproduce the results. In order to do so, you need to download the raw data as well as annotated twilight files used in this manual. The data need to be in a specific structure of folders and we do recommend you have a similar structure for your own analysis. During the processing of the data we save intermediate steps that allow us to step into the next analysis step without going through all initial and often time consuming parts. Having your raw data and your results in a well structured fomr, becomes especially important if you run analyses for many tags of the same or different species. It is also recommended that you create a single R script for each analysis (e.g. for each individual and each analysis using different tools). For example, you can name the R scripts using the tag id and the tool e.g. 14SA_SGAT.R. Since this manual is dealing with tags from different species, the following structure with sub-folders per speces (first three letters of the genus name and the species name) is setup within the main folder (called data): RawData LanCol MerApi PasCir Results LanCol MerApi PasCir RCode LanCol MerApi PasCir You can download the folders with the raw data as well as the annotaded twilight files directly via R and extract into a data folder. url &lt;- &quot;https://github.com/slisovski/TheGeolocationManual/raw/master/download/data.zip&quot; temp &lt;- tempfile() download.file(url, temp) unzip(temp, exdir = &quot;data&quot;) We also recommend using R Studio and creating a project (File -&gt; NewProject). Alternatively, you can set the working directory using the setwd function. With the data folder in your project folder (or more in general in your working directory) you should be able to run the code provided in this manual. We also recommend to use R Studio and to create a project (File -&gt; NewProject). Save the project file into the existing Data folder. This makes sure that Data is your working directory and it will remain the working directory even if the folder moves around on your drive. Alternatively, you can set the working directory using the setwd function. With the suggested folder structure and the raw data and the annotaded twiligth files you should be able to run the code provided in this manual. "],
["start.html", "Chapter 2 Getting started", " Chapter 2 Getting started To analyse light-level geolocator data in R we need a couple of R packages as well as functions that allow to run our code. We created a package called GeoLocTools that contains functions that are not nessesarily associated to a certain package but are used in this manual. Importantly the package can also run a check on you system (function: setupGeolocation()), detecting packages that are already on your computer and installs the missing tools directly from CRAN or GitHub. The package requires devtools (install if nessesary using the install.packages() function). With devtools on your system, you are able to download and built as well as install R packages directly from GitHub (e.g. GeoLocTools). library(devtools) install_github(&quot;SLisovski/GeoLocTools&quot;) You should now be able to load the package and run the setupGeolocation() function. We recommend to include this line at the beginning of each script you create for a geolocator analysis. Also check (every now and then), if there is a new version of GeoLocTools available. And if that is the case, re-install the package using the same code you used for initial installation. library(GeoLocTools) setupGeolocation() if you see “You are all set!” in your console, the function ran succesfully and you are able to proceed. Amongst dependencies, the following geolocator specific packages are loaded by this function: twGeos GeoLight probGLS SGAT FLightR What the $#@%!#!!! Although the GeoLocTools should make things much easier, it is quite common for problems to arise when setting up your environment. A few frequent and frustrating issues are: Outdated version of R. If you are not running the latest (or at least a recent) version of R, then some of the packages might not be compatible. Use sessionInfo() to see what version of R you are running. You can ususally track down the latest version of R at the R project webpage: www.r-project.org. Note that you may have to reinstall all of your packages when you get a new version of R. So expect to spend a few minutes on the update.) Missing libraries. Some packages require that you have specific sofware libraries installed an accessible on your system. if you get a message like “configure: error: geos-config not found or not executable,” you may be missing a library. Dealing with these issues may require some use of the Bash or Unix shell to install or locate a library. You can often find instructions for intalling new libraries by searching the internet, but if you do not feel comfortable installing stuff with the command line or you do not have permission to do so, you will probably need to seek some assistance from someone with IT credentials. Typos. Probably the most common error in R arises simply from typos. Even published scripts or manuals like these may contain small typos that prevent your script from running. "],
["loadingData.html", "Chapter 3 Loading data", " Chapter 3 Loading data The first step is to load your raw data into R. Different geolocator types (e.g. from different manufacturers or different series) provide raw data in different formats. And while there are functions available to read a whole range of formats, you may have to either write your own function, use simple read text utilities or get in touch with the package managers to write code that fits your format if it is not yet implemented. The most frequently used geolocators provide files with the extension .lux (Migrate Technology Ltd), .lig (BAS, Biotrack) or .glf (Swiss Ornithological Institute). The functions readMTlux, ligTrans and glfTrans allows you to read these files. The documentations of the different packages may help to provide information on how to read other files (e.g. ?GeoLight). In most cases the raw data is stored in a text file that can also be read in to R using the base function read.table(). A short note on naming and saving of data files (final results and intermediate steps): We have already discussed, that it makes sense to have a certain folder structure for the analysis of geolocators. It not only helps to keep track of all files and analysis, but most importantly it allows to run the same code for saving and reading of data once you defined a set of metadata information. With the suggested data structure, we can then define metadata information on the individual, the species, the deployment location, and define the sub-folder for saving and extracting data files. ID &lt;- &quot;14SA&quot; Species &lt;- &quot;MerApi&quot; lon.calib &lt;- 11.96 lat.calib &lt;- 51.32 wd &lt;- &quot;data&quot; By using the above metadata we can use the paste0 command to include this information in reading and writing of files. raw &lt;- glfTrans(paste0(wd, &quot;/RawData/&quot;, Species, &quot;/&quot;, ID, &quot;.glf&quot;)) names(raw) &lt;- c(&quot;Date&quot;, &quot;Light&quot;) raw$Light &lt;- log(raw$Light+0.0001) + abs(min(log(raw$Light+0.0001))) head(raw) Date Light 1 2015-07-10 00:00:00 0 2 2015-07-10 00:05:00 0 3 2015-07-10 00:10:00 0 4 2015-07-10 00:15:00 0 5 2015-07-10 00:20:00 0 6 2015-07-10 00:25:00 0 In this case it is required log transform the light data. In addition, we add a small value since the night readings are sometimes smaller than zero, values that cannot be log transformed. Adding to the confusion of different raw data types, the read functions also provide different output. However, the most important columns are, Date Light and these columns need to be in a specific format with Date being a POSIXc class and Light being numeric integers. Check if the structure of your data follows the required format with the function str. If not adjust Date format with as.POSIXct(raw$Date, tz = &quot;GMT&quot;). str(raw) &#39;data.frame&#39;: 112161 obs. of 2 variables: $ Date : POSIXct, format: &quot;2015-07-10 00:00:00&quot; &quot;2015-07-10 00:05:00&quot; ... $ Light: num 0 0 0 0 0 0 0 0 0 0 ... Do I need to log-transform my raw light measurements? Log-transformation of the light intensities is helpful to visualise and inspect the data and for the twilight annotation process. It allows to focus at the low light values while seeing the whole light curve and thus makes sense for the tags that measure the full light spectrum (e.g. tags from Migrate Technology Ltd. and from the Swiss Ornithological Institute). If you proceed to analyse your data with FLightR, where you need the raw light intensities, there is no need to back-transform you light data as FLightR will do that automatically. "],
["twilight.html", "Chapter 4 Twilight Annotation", " Chapter 4 Twilight Annotation … "],
["GeoLight.html", "Chapter 5 GeoLight", " Chapter 5 GeoLight … "],
["probGLS.html", "Chapter 6 probGLS", " Chapter 6 probGLS … "],
["SGAT.html", "Chapter 7 SGAT", " Chapter 7 SGAT … "],
["FLightR.html", "Chapter 8 FLightR", " Chapter 8 FLightR … "],
["repositories.html", "Chapter 9 Data repositories", " Chapter 9 Data repositories … "],
["references.html", "References", " References Ekstrom, P. (2004). An advance in geolocation by light. Memoirs of the National Insitute of Polar Research, Special Issue, 58, 210–226. Ekstrom, P. (2007). Error measures for template-fit geolocation based on light. Deep Sea Research Part II: Topical Studies in Oceanography, 54, 392–403. Lisovski, S., Hahn, S. (2012a). GeoLight - processing and analysing light-based geolocator data in R. Methods in Ecology and Evolution, 3, 1055–1059. Lisovski, S., Hewson, C.M., Klaassen, R.H.G., Korner-Nievergelt, F., Kristensen, M.W. &amp; Hahn, S. (2012b). Geolocation by light: accuracy and precision affected by environmental factors. Methods in Ecology and Evolution, 3, 603–612. Pedersen L., et. al. Rakhimberdiev, E., Winkler, D.W., Bridge, E., Seavy, N.E., Sheldon, D., Piersma, T. &amp; Saveliev, A. (2015). A hidden Markov model for reconstructing animal paths from solar geolocation loggers using templates for light intensity. Movement Ecology, 3, 25. Rakhimberdiev, E., Senner, N. R., Verhoeven, M. A., Winkler, D. W., Bouten, W. and Piersma T. (2016) Comparing inferences of solar geolocation data against high-precision GPS data: annual movements of a double-tagged Black-Tailed Godwit. Journal of Avian Biology 47: 589-596. Rakhimberdiev, E., Saveliev, A., Piersma, T., &amp; Karagicheva, J. (2017). FLightR: An R package for reconstructing animal paths from solar geolocation loggers. Methods in Ecology and Evolution, 8(11), 1482-1487. "]
]
